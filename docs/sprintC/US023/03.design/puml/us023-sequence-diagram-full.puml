@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "GSM"
participant ":AssignTeamToTaskInTheAgendaUI" as UI
participant ":AssignTeamController" as Controller
participant ":Repositories" as Repositories
participant ":repositories\n:Repositories"
participant ":Employee" as Employee
participant ":GreenSpaceRepository" as GreenSpaceRepository
participant ":TaskRepository" as TaskRepository
participant ":TeamRepository" as TeamRepository

participant ":Task" as Task


activate GSM
ref over GSM, UI : This action assumes that the user has already logged in

GSM -> UI : Initiates team assignment to a task \nin the agenda
    activate UI

           UI -> "Controller" : requestTask()
                activate "Controller"
                "Controller" -> "Repositories": getInstance()
                        activate "Repositories"
                        "Repositories" --> "Controller": repositories
                        deactivate "Repositories"
                "Controller" -> ":repositories\n:Repositories" : getTeamRepository()
                        activate ":repositories\n:Repositories"
                        ":repositories\n:Repositories" --> "Controller" : TeamRepository
                        deactivate ":repositories\n:Repositories"
                "Controller" -> ":repositories\n:Repositories" : getTaskRepository()
                        activate ":repositories\n:Repositories"
                        ":repositories\n:Repositories" --> "Controller" : TaskRepository
                        deactivate ":repositories\n:Repositories"
                "Controller" -> ":repositories\n:Repositories" : getGreenSpaceRepository()
                        activate ":repositories\n:Repositories"
                        ":repositories\n:Repositories" --> "Controller" : GreenSpaceRepository
                        deactivate ":repositories\n:Repositories"
                "Controller" -> "GreenSpaceRepository" : getGreenSpaces()
                        activate "GreenSpaceRepository"
                        "GreenSpaceRepository" --> "Controller" : list of GreenSpaces
                        deactivate "GreenSpaceRepository"

                "Controller" -> "TaskRepository" : getAgenda()
                        activate "TaskRepository"
                        "TaskRepository" --> "Controller" :list of tasks in the Agenda
                        deactivate "TaskRepository"
                "Controller" --> UI : list of tasks in the Agenda
                deactivate "Controller"
           UI --> "GSM" : lists tasks in the Agenda \nand asks to select one
           deactivate UI
GSM -> UI : selects a task from the list
           activate UI
           UI -> "Controller" : listAvailableTeams()
                activate "Controller"
                "Controller" -> "TeamRepository" : getAllTeamTasks()
                        activate "TeamRepository"
                        "TeamRepository" -> "TeamRepository" : taskOverlap()
                        "TeamRepository" --> "Controller" :list of available teams
                        deactivate "TeamRepository"
                "Controller" --> UI : list of available teams
                deactivate "Controller"
           UI --> GSM : lists available teams \nand asks to select one
           deactivate UI
GSM -> UI: submitData (team, task)
           activate UI
           UI -> "Controller": "assignTeamToTask()
                activate "Controller"
                "Controller" -> "Employee": assignTeamToTask()
                        activate "Employee"
                        "Employee" -> "Task": assignTeam()
                                activate "Task"
                                "Task" -> "Task" : setTaskStatus(PLANNED)
                                "Task" --> "Employee" : update success
                                deactivate "Task"
                        "Employee" --> "Controller": update success
                        deactivate "Employee"
                "Controller" -> "EmailService" : assignTaskToTeamEmail()
                        activate "EmailService"
                            "EmailService" -> "Email" : sendEmailTeam()
                                activate "Email"
                                    "Email" -> "ConfigFile" : loadValidEmailServices()
                                        activate "ConfigFile"
                                        "ConfigFile" --> "Email" : validEmailServices
                                        deactivate "ConfigFile"
                                    "Email" --> "EmailService" : email sent to assignedTeam
                                deactivate "Email"
                            "EmailService" --> "Controller" : email sent to assignedTeam
                        deactivate "EmailService"
                        deactivate "TeamRepository"
                "Controller" --> UI : update success
                deactivate "Controller"
           UI --> GSM : update success and \nemailSentToTeamMembers
           deactivate UI







    deactivate GSM

@enduml