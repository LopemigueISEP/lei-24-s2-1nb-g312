@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "GSM" as GSM
participant ":AddEntryToDoListUI" as UI
participant ":AddEntryToDoListController" as CTRL
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "greenSpacesRepository\n:GreenSpacesRepository" as GreenSpacesRepository
participant "employeeRepository:\nEmployeeRepository" as EmployeeRepository
participant "employee:Employee" as employee
participant "task:Task" as task

participant "taskUrgency\n:TaskUrgency" as TaskUrgency
'DUVIDA PARA O FOF ^


ref over GSM, UI : This action assumes that the user has already logged in
activate GSM

    GSM -> UI : asks to add a new entry to the To-Do List
    activate UI
        UI -> CTRL: getGreenSpaces()
        activate CTRL
            CTRL -> RepositorySingleton : getInstance()
            activate RepositorySingleton

                RepositorySingleton --> CTRL: repositories
            deactivate RepositorySingleton

            CTRL -> PLAT : getGreenSpacesRepository()
            activate PLAT

                PLAT --> CTRL: greenSpacesRepository
            deactivate PLAT
            CTRL -> GreenSpacesRepository: getGreenSpaceList()
            activate GreenSpacesRepository
                GreenSpacesRepository --> CTRL: greenSpaceList
            deactivate GreenSpacesRepository

            CTRL --> UI : greenSpaceList
        deactivate CTRL

        UI -> CTRL: getTaskUrgencies()
        activate CTRL
            CTRL -> TaskUrgency : getTaskUrgencies()
            activate TaskUrgency
                TaskUrgency -> CTRL: taskUrgency
            deactivate TaskUrgency
        CTRL -> UI : taskUrgency
        deactivate CTRL
    UI --> GSM : shows green spaces and task urgency to be selected\n and requests data (taskTitle, taskDescription, expectedDuration)
    deactivate UI

    GSM -> UI : selects green space and task urgency\n and types requested data
    activate UI

        UI -> CTRL : addTodoList()
        activate CTRL
            CTRL->CTRL: getEmployeeFromRepository()
            CTRL -> RepositorySingleton : getInstance()
            activate RepositorySingleton
                RepositorySingleton --> CTRL : repositories
            deactivate RepositorySingleton
        CTRL -> PLAT : getEmployeeRepositories()
        activate PLAT
            PLAT --> CTRL : EmployeeRepositories
        deactivate PLAT
        CTRL -> EmployeeRepository: getEmployee()
        activate EmployeeRepository
            EmployeeRepository -->CTRL: employee
        deactivate EmployeeRepository
        CTRL --> CTRL: employee
        CTRL -> employee : createTask(selectedGreenSpace,taskTitle,taskDescr,taskUrgency,expectedDuration)
        activate employee
            employee -> task**: registerTask(selectedGreenSpace,taskTitle,taskDescr,taskUrgency,expectedDuration)
            activate task
            task -> employee: task
            deactivate task
            employee -> CTRL: task
        deactivate employee
        CTRL -> UI: task

    deactivate CTRL
    UI --> GSM: shows all data and requests confirmation
    GSM -> UI : confirms data
    UI --> GSM : displays operation success

    deactivate UI

@enduml