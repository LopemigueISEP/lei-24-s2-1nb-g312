@startuml
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
skinparam classAttributeIconSize 0


class TasksAssignedToMeBetweenTwoDatesUI {

}


class TasksAssignedToMeBetweenToDatesController {

    +getEmployeeRepository()
    getTaskStatusValues(): List<TaskStatus>
    getTasksAssignedToMeBetweenToDates(startDate, endDate): List<Task>

}

class Repositories {
    -Repositories()
    +getInstance()
    +getEmployeeRepository()
}

class EmployeeRepository {
    +getEmployee(): employee
}

class Tasks{
    - List<Task> tasks
    +getAgenda(): List<Task>
    +isBetweenDates(startDate,endDate)
    +getAssignedTeam(): team
    +getTeamEmployees(): List<Employee>
    +isAssignedToCurrentCollaborator():boolean

}




class Task {

     -title: String
     -description: String
     -taskExpectedDuration: int
     -greenSpace: greenSpace
     -urgency: TaskUrgency
     -status: TaskStatus
     -assignedTeam: team
     -assignedVehicles: List<Vehicles>
     -taskID: int
     -startDate: Date
     -endDate: Date
     -taskPosition: TaskPosition

}

enum TaskStatus {
    PLANNED
    POSTPONED
    CANCELED
    DONE
    PENDING
}

class Employee {
+getTasksAssignedToMeBetweenToDates(startDate, endDate): List<Task>
}

TasksAssignedToMeBetweenTwoDatesUI "1" ..> "1" TasksAssignedToMeBetweenToDatesController
TasksAssignedToMeBetweenToDatesController "1" ..> "1" Repositories: repositories

TasksAssignedToMeBetweenToDatesController "1" .> "*" Employee
TasksAssignedToMeBetweenToDatesController "1" .> "*" TaskStatus: taskStatus
Repositories --> Repositories: instance
Repositories "1" --> "1" EmployeeRepository
EmployeeRepository "1" --> "*" Employee
Employee "1" --> "1" Tasks: listTasks
Tasks "1" --> "*" Task
Task "1" .> "1" TaskStatus

@enduml