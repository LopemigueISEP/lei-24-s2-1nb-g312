@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0

class CompleteTaskUI {

}

class CompleteTaskController {

}

class Repositories {
    -TaskRepository
    -Repositories()
    +getInstance()
    +getTaskRepository()
}

class TaskRepository {
    +List<Task>
    +recordTaskCompletion(Task task, String observations)
}

class EmployeeRepository{


+getEmployee(): Employee

}

class Task {
    -status : TaskStatus
    +setCompleted(String observations)
}

enum TaskStatus {
    PLANNED
    POSTPONED
    CANCELED
    DONE
    PENDING
}

class Employee{
    -name : String
    -birthdate : Date
    -email : String
    -phoneNumber : int
    -admission date : Date
    -taxpayerNumber : String
    -address : String
    -docNumber : String
    -jobTitle : String

+ addTaskAgenda(selectedGreenSpace : GreenSpace, selectedTask : Task, selectedDate : LocalDate, startTime : int, agenda : TaskPosition, userValidation : boolean) : Optional<Task>
//todoo

}

CompleteTaskUI  .>  CompleteTaskController

CompleteTaskController  .> "1" Repositories

Repositories "1" --> "1" Repositories: instance
Repositories "1" --> "1" EmployeeRepository
Repositories "1" --> "1" TaskRepository

CompleteTaskController ..> Employee

EmployeeRepository "1" --> "1" Employee
TaskRepository "1" --> "1" Employee

Employee --> Task: complete

Task "1" .> "1" TaskStatus

@enduml