@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "HRM" as HRM
participant ":RegisterSkillUI" as UI
participant ":RegisterSkillController" as CTRL
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "employeeRepositories" as EMPLREP
participant "employee\n:Employee" as EMP

'participant "organizationRepository:\nOrganizationRepository" as OrganizationRepository
'participant "organization\n:Organization" as ORG
participant "skill\n:Skill" as SKILL

activate HRM
ref over HRM, UI : This action assumes that the user has already logged in

        HRM -> UI : asks to register a new skill


        activate UI

'            UI --> ADM : requests data (reference, description,  informal \n description, technical description, duration, cost)
            'create CTRL
'            UI -> CTRL** : create


            UI --> HRM : requests skill name and description
            deactivate UI

            HRM -> UI: types requested data
            activate UI

            UI --> "HRM": shows data and requests validation
            deactivate UI

            HRM -> UI : confirms data

            activate UI

            UI -> CTRL :registerSkill (skillName , skillDescription)

            activate CTRL


            CTRL->CTRL: getEmployeeFromRepository()

                activate CTRL
                CTRL -> RepositorySingleton : getInstance()
                activate RepositorySingleton

                RepositorySingleton --> CTRL : repositories
                deactivate RepositorySingleton

                CTRL -> PLAT : getEmployeeRepositories()
                activate PLAT


                PLAT --> CTRL : EmployeeRepositories
                deactivate PLAT


                CTRL -> EMPLREP: getEmployee()
                activate EMPLREP
                EMPLREP -->CTRL: employee
                deactivate EMPLREP

            CTRL-->CTRL: employee
            deactivate CTRL

            |||
            CTRL -> EMP : registerSkill(employee, skillName, skillDescription)
            activate EMP

            EMP ->SKILL** : registerSkill(employee, skillName, skillDescription)

            EMP -> EMP: validateSkill(skill)
            EMP -> EMP: addSkill(skill)

            EMP --> CTRL: skill
            deactivate EMP



            CTRL --> UI: skill
            deactivate CTRL

            UI --> HRM: displays operation success
            deactivate UI

deactivate HRM




@enduml